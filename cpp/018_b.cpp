#include <bits/stdc++.h>
using namespace std;
using ll = long long;

int main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    string text;
    int n;
    cin >> text >> n;
    for (int i = 0; i < n; i++) {
        int l, r;
        cin >> l >> r;
        l --;
        r --;
        reverse(text.begin() + l, text.begin() + r + 1);
    }
    cout << text << endl;
}
/*
#include <bits/stdc++.h>
using namespace std;

// #include <atcoder/all>
//  using namespace atcoder;

#define isin(l, x, r) (l <= x && x < r)
#define rep(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define rep3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define rep_r(i, n) for (int i = (int)(n) - 1; (i) >= 0; --(i))
#define rep3r(i, m, n) for (int i = (int)(n) - 1; (i) >= (int)(m); --(i))
#define all(x) begin(x), end(x)
#define UNIQUE(v) v.erase(unique(v.begin(), v.end()), v.end())

using ll = long long;
using PI = std::pair<int, int>;
using PLL = std::pair<ll, ll>;
using VI = std::vector<int>;
using VLL = std::vector<ll>;

template <typename T>
using PQ = std::priority_queue<T, std::vector<T>, std::greater<T>>;

template <typename T>
bool chmax(T &a, const T &b) {
  if (a < b) {
    a = b; // aをbで更新
    return true;
  }
  return false;
}

template <typename T>
bool chmin(T &a, const T &b) {
  if (a > b) {
    a = b; // aをbで更新
    return true;
  }
  return false;
}

/*
#define rad_to_deg(rad) (((rad)/2/M_PI)*360)
cout << std::fixed << std::setprecision(15) << y << endl;
int dx[4]={1,0,-1,0};
int dy[4]={0,1,0,-1};
*/

/*
#include <atcoder/all>
using namespace atcoder;
using mint = modint998244353;
*/
/*
#ifdef LOCAL
#include <debug.h>
#else
#define dlog(...)
#endif

std::string solve(std::string S, int N, const std::vector<ll> &l, const std::vector<ll> &r) {
  rep(i, N) {

    auto x = l[i];
    auto y = r[i];
    rep(j, (y - x + 1) / 2) {
      swap(S[x + j], S[y - j]);
    }
  }
  return S;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);
  cout << std::fixed << std::setprecision(15);
  std::string S;
  int N;
  std::cin >> S >> N;
  std::vector<ll> l(N), r(N);
  rep(i, N) {
    std::cin >> l[i] >> r[i];
    l[i]--;
    r[i]--;
  }
  auto ans = solve(S, N, l, r);
  std::cout << ans << '\n';
  return 0;
}
*/